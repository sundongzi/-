(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{384:function(a,t,r){"use strict";r.r(t);var e=r(45),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p",[a._v("![image-20191220194051543](/Users/sundong/Library/Application Support/typora-user-images/image-20191220194051543.png)")]),a._v(" "),r("h4",{attrs:{id:"对称加密-aes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对称加密-aes"}},[a._v("#")]),a._v(" 对称加密（aes）")]),a._v(" "),r("p",[a._v("对于对称加密客户端与服务端公用"),r("code",[a._v("同一个密钥")]),a._v("，虽然我们在后续的通信中对明文进行了加密，"),r("code",[a._v("但是第一次约定加密方式和密钥的通信仍然是明文")]),a._v("，如果第一次通信就已经被拦截了，那么密钥就会泄露给中间人，中间人仍然可以解密后续所有的通信内容")]),a._v(" "),r("h4",{attrs:{id:"非对称加密-rsa"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密-rsa"}},[a._v("#")]),a._v(" 非对称加密（rsa）")]),a._v(" "),r("p",[a._v("非对称加密的一组秘钥对中，包含一个公钥和一个私钥。明文既可以用公钥加密，用私钥解密；也可以用私钥加密，用公钥解密")]),a._v(" "),r("p",[a._v("![image-20200820112001829](/Users/sundong/Library/Application Support/typora-user-images/image-20200820112001829.png)")]),a._v(" "),r("p",[a._v("图中第7处表述有问题，应该是通过A公钥加密发给服务器。")]),a._v(" "),r("h4",{attrs:{id:"数字证书"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[a._v("#")]),a._v(" 数字证书")]),a._v(" "),r("p",[a._v("1.服务端把自己的公钥发给证书颁发机构申请证书")]),a._v(" "),r("p",[a._v("2.证书颁发机构自己也有一对公钥私钥。机构利用自己的私钥来加密Key1，并且通过服务端网址等信息生成一个证书签名，证书签名同样经过机构的私钥加密。证书制作完成后，机构把证书发送给了服务端")]),a._v(" "),r("p",[a._v("3.当客户端请求时，服务端不在返回自己的公钥，而是把申请的证书返回给客户端")]),a._v(" "),r("p",[a._v("4.客户端收到证书以后，要做的第一件事情是验证证书的真伪。需要说明的是，"),r("strong",[a._v("各大浏览器和操作系统已经维护了所有权威证书机构的名称和公钥")]),a._v("。所以客户端只需要知道是哪个机构颁布的证书，就可以从本地找到对应的机构公钥，解密出证书签名。按照同样的签名规则，自己也生成一个证书签名，如果证书签名一致，则说明证书是有效的")]),a._v(" "),r("p",[a._v("5.验证成功后客户端可以利用机构公钥解密出服务端的公钥")]),a._v(" "),r("p",[a._v("6.客户端生成自己的对称加密密钥，并且用服务端的公钥和加密方法返回给服务端")]),a._v(" "),r("p",[a._v("7.服务端通过自己的私钥解开加密，获得对称加密密钥")]),a._v(" "),r("h5",{attrs:{id:"以上证书的签名是有服务端网址等信息生成的-并且经过机构私钥加密-中间人无法篡改。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#以上证书的签名是有服务端网址等信息生成的-并且经过机构私钥加密-中间人无法篡改。"}},[a._v("#")]),a._v(" 以上证书的签名是有服务端网址等信息生成的，并且经过机构私钥加密，中间人无法篡改。")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/57142784",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考链接"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);