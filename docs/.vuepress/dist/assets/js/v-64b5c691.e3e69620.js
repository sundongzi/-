(self.webpackChunkdaily_summary=self.webpackChunkdaily_summary||[]).push([[6456],{1066:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-64b5c691",path:"/%E9%A1%B9%E7%9B%AE%E7%A7%AF%E7%B4%AF/%E8%8F%9C%E5%8D%95%E8%BF%87%E5%A4%9A%E5%A4%84%E7%90%86.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"项目积累/菜单过多处理.md",git:{updatedTime:1615448503e3,contributors:[{name:"sundong",email:"sundong@idss-cn.com",commits:1}]}}},3366:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h4 id="菜单过多处理"><a class="header-anchor" href="#菜单过多处理">#</a> 菜单过多处理</h4><p>==方案:利用canvas计算出每个菜单的长度(计算菜单每个字节的长度),然后找到最多放下多少个菜单，找到菜单显示的临界==</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 菜单处理</span>\n\t\t<span class="token function">menuOpe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">let</span> allMenu <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr           <span class="token comment">// 所有菜单</span>\n\t\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>moreMenu <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>               <span class="token comment">// 每次窗口发生变化，清空省略号里面绑定的数组</span>\n\t\t\t<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTarMenuIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t\t\t<span class="token keyword">let</span> hideMenu <span class="token operator">=</span> allMenu<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>\n\t\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>moreMenu<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>hideMenu<span class="token punctuation">)</span>          <span class="token comment">// 需要隐藏的菜单数组</span>\n\t\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>menuArr <span class="token operator">=</span> allMenu<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>   <span class="token comment">// 需要显示的菜单数组</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t<span class="token comment">// 获取不需要展示的第一个菜单下标,作为中间节点，来控制哪些菜单需要显示，哪些需要放在省略号里面</span>\n\t\t<span class="token function">getTarMenuIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">let</span> allMenu <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr\n\t\t\t<span class="token keyword">let</span> screenWid <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>screenWid<span class="token punctuation">.</span>offsetWidth  <span class="token comment">// 用于计算窗口宽度</span>\n\t\t\t<span class="token keyword">let</span> headerCanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 创建canvas</span>\n\t\t\t<span class="token keyword">let</span> ctx <span class="token operator">=</span> headerCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">let</span> ellipsisWid <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>moreMenuRef<span class="token punctuation">.</span>offsetWidth   <span class="token comment">// 用于计算省略号的宽度</span>\n\t\t\t<span class="token keyword">let</span> menuWidSum <span class="token operator">=</span> <span class="token number">0</span>         <span class="token comment">// 用于缓存展示菜单的宽度之和</span>\n\t\t\tctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">&quot;16px Arial&quot;</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> allMenu<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t<span class="token keyword">let</span> wid <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">measureText</span><span class="token punctuation">(</span>allMenu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token number">40</span>\n\t\t\t\tmenuWidSum <span class="token operator">+=</span> wid\n\t\t\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>menuWidSum<span class="token operator">+</span>ellipsisWid<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> screenWid<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 如果当前显示菜单宽度加省略号所占宽度之和大于屏幕宽度</span>\n\t\t\t\t\t<span class="token keyword">return</span> i\n\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t<span class="token punctuation">}</span>\n\t\t\theaderCanvas <span class="token operator">=</span> <span class="token keyword">null</span>     <span class="token comment">// 清除canvas</span>\n\t\t\t<span class="token keyword">return</span> allMenu<span class="token punctuation">.</span>length\n\t\t<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>',3),p={render:function(n,s){return t}}}}]);